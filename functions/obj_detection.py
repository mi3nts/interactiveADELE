    
seconds_dict = {1: ['laptop', 'person'],
    2: ['laptop'],
    3: ['laptop', 'tv'],
    4: ['tv', 'laptop'],
    5: ['laptop'],
    6: ['laptop', 'cell phone', 'person'],
    7: ['cell phone', 'person', 'book', 'laptop', 'keyboard'],
    8: ['cell phone', 'person'],
    9: ['cell phone', 'person', 'laptop'],
    10: ['cell phone', 'laptop', 'tv', 'handbag', 'book'],
    11: ['cell phone', 'laptop', 'book'],
    12: ['cell phone', 'person', 'laptop', 'book'],
    13: ['tv', 'person'],
    14: ['book', 'bottle'],
    15: ['couch', 'person'],
    16: ['person', 'couch'],
    17: ['person', 'bottle', 'remote'],
    18: ['person'],
    19: ['person', 'remote'],
    20: ['person', 'remote'],
    21: ['person', 'bottle'],
    22: ['person', 'bottle', 'couch', 'remote'],
    23: ['person', 'cell phone', 'remote'],
    24: ['person', 'cell phone', 'bottle'],
    25: ['person', 'remote', 'cell phone'],
    26: ['person', 'bottle', 'cup'],
    27: ['person', 'bottle'],
    28: ['person', 'bottle'],
    29: ['person', 'bottle', 'teddy bear'],
    30: ['person', 'bottle', 'couch'],
    31: ['person', 'bottle'],
    32: ['person', 'bottle'],
    33: ['person', 'bottle'],
    34: ['person', 'bottle'],
    35: ['bottle', 'person'],
    36: ['person', 'bottle', 'couch', 'chair'],
    37: ['bottle', 'person', 'couch'],
    38: ['bottle', 'person', 'couch'],
    39: ['bottle', 'couch', 'person'],
    40: ['bottle', 'couch', 'person', 'cat'],
    41: ['person',
    'remote',
    'couch',
    'cell phone',
    'bottle',
    'scissors',
    'knife'],
    42: ['bottle', 'person', 'book'],
    43: ['person', 'remote', 'book', 'bottle', 'cell phone'],
    44: ['person',
    'cell phone',
    'book',
    'bottle',
    'dining table',
    'remote',
    'chair'],
    45: ['person', 'cell phone', 'book', 'remote', 'bottle'],
    46: ['bottle', 'person', 'remote', 'cell phone'],
    47: ['person', 'remote', 'cup'],
    48: ['person', 'bottle', 'remote', 'cell phone'],
    49: ['person', 'remote', 'bottle'],
    50: ['bottle', 'person', 'remote', 'cell phone'],
    51: ['bottle', 'person', 'remote', 'cell phone', 'chair'],
    52: ['bottle', 'person', 'cell phone'],
    53: ['bottle', 'person', 'cell phone', 'remote'],
    54: ['bottle', 'cell phone', 'person', 'cup', 'remote'],
    55: ['bottle', 'person', 'cell phone', 'chair'],
    56: ['bottle', 'remote', 'person', 'cell phone', 'chair'],
    57: ['bottle', 'person', 'cell phone'],
    58: ['bottle', 'person', 'cell phone'],
    59: ['person', 'bottle'],
    60: ['person', 'bottle'],
    61: ['person', 'bottle'],
    62: ['person', 'bottle', 'cell phone'],
    63: ['person', 'bottle', 'cell phone', 'remote'],
    64: ['bottle', 'cell phone', 'person'],
    65: ['bottle', 'person', 'remote', 'cell phone'],
    66: ['person', 'bottle', 'cell phone', 'remote'],
    67: ['bottle', 'person', 'cell phone'],
    68: ['bottle', 'person', 'cell phone', 'remote'],
    69: ['bottle', 'person', 'remote', 'cell phone'],
    70: ['person', 'bottle', 'remote', 'cell phone'],
    71: ['person', 'bottle', 'remote', 'cell phone'],
    72: ['bottle', 'person', 'chair', 'cell phone', 'remote'],
    73: ['person', 'bottle', 'cell phone', 'remote'],
    74: ['person', 'chair', 'cell phone', 'bottle'],
    75: ['bottle', 'person', 'cell phone', 'remote', 'book'],
    76: ['person', 'bottle', 'cell phone'],
    77: ['cell phone', 'person', 'bottle'],
    78: ['person', 'bottle', 'chair'],
    79: ['person', 'remote', 'bottle'],
    80: ['person', 'remote', 'bottle', 'cell phone'],
    81: ['person', 'bottle', 'remote', 'cell phone'],
    82: ['bottle', 'person', 'remote'],
    83: ['bottle', 'person'],
    84: ['person', 'bottle', 'remote'],
    85: ['bottle', 'person', 'remote', 'cell phone'],
    86: ['person', 'bottle', 'cell phone', 'remote'],
    87: ['person', 'bottle', 'book'],
    88: ['bottle', 'person', 'remote', 'cell phone'],
    89: ['bottle', 'person', 'cell phone', 'remote'],
    90: ['person', 'bottle', 'remote', 'cell phone'],
    91: ['bottle', 'person', 'remote', 'laptop'],
    92: ['person', 'bottle', 'couch', 'remote', 'laptop'],
    93: ['person', 'bottle', 'remote', 'cell phone'],
    94: ['person', 'bottle', 'remote', 'cell phone'],
    95: ['person', 'bottle'],
    96: ['person', 'bottle', 'book'],
    97: ['person', 'book', 'bottle', 'remote', 'chair'],
    98: ['person', 'bottle', 'cell phone', 'remote'],
    99: ['bottle', 'person', 'cell phone', 'remote'],
    100: ['cell phone', 'bottle', 'person'],
    101: ['bottle', 'person', 'cell phone', 'remote'],
    102: ['bottle', 'person', 'cell phone'],
    103: ['bottle', 'person', 'cell phone', 'cup'],
    104: ['person', 'bottle'],
    105: ['bottle', 'person', 'cup', 'cell phone', 'remote'],
    106: ['bottle', 'person', 'remote', 'cell phone'],
    107: ['bottle', 'person', 'cell phone', 'remote'],
    108: ['bottle', 'person', 'cell phone'],
    109: ['person', 'bottle'],
    110: ['person', 'bottle'],
    111: ['bottle', 'person', 'cell phone'],
    112: ['person', 'book', 'bottle', 'cell phone'],
    113: ['person', 'remote', 'cell phone', 'bottle'],
    114: ['person', 'cell phone', 'remote'],
    115: ['person', 'bottle', 'remote', 'cell phone'],
    116: ['bottle', 'cell phone', 'person', 'laptop'],
    117: ['person', 'laptop', 'bottle'],
    118: ['person', 'laptop', 'bottle', 'book'],
    119: ['bottle', 'person', 'cell phone'],
    120: ['bottle', 'cell phone', 'person'],
    121: ['bottle', 'cell phone', 'person', 'chair'],
    122: ['person', 'bottle'],
    123: ['bottle', 'person', 'book', 'cell phone'],
    124: ['bottle', 'person', 'cell phone'],
    125: ['person', 'bottle', 'cell phone', 'chair', 'remote'],
    126: ['person', 'bottle', 'cell phone', 'remote'],
    127: ['bottle', 'person', 'cell phone', 'remote'],
    128: ['person', 'cell phone', 'bottle', 'remote'],
    129: ['person', 'bottle', 'remote', 'cell phone'],
    130: ['bottle', 'person', 'remote', 'cell phone', 'chair'],
    131: ['bottle', 'person', 'remote', 'cell phone'],
    132: ['person', 'bottle', 'remote', 'cell phone'],
    133: ['bottle', 'person', 'remote', 'cell phone'],
    134: ['person', 'bottle', 'cell phone', 'remote'],
    135: ['bottle', 'person', 'remote', 'chair'],
    136: ['person', 'bottle', 'cell phone'],
    137: ['bottle', 'person', 'cell phone', 'remote'],
    138: ['bottle', 'person', 'remote', 'cell phone'],
    139: ['person', 'bottle', 'cell phone', 'remote'],
    140: ['bottle', 'person', 'cell phone', 'remote'],
    141: ['bottle', 'person', 'cell phone', 'remote'],
    142: ['person', 'remote', 'bottle', 'cell phone', 'chair'],
    143: ['bottle', 'person', 'remote'],
    144: ['bottle', 'person', 'remote', 'chair'],
    145: ['person', 'bottle', 'chair', 'remote', 'cell phone', 'book'],
    146: ['bottle', 'cell phone', 'person'],
    147: ['person', 'bottle', 'cell phone'],
    148: ['cell phone', 'person', 'bottle'],
    149: ['cell phone', 'bottle', 'person'],
    150: ['cell phone', 'bottle', 'person'],
    151: ['bottle', 'cell phone', 'person', 'chair', 'remote'],
    152: ['person', 'cell phone', 'bottle', 'book'],
    153: ['cell phone', 'person', 'bottle', 'book'],
    154: ['cell phone', 'bottle', 'person'],
    155: ['cell phone', 'person', 'bottle', 'remote'],
    156: ['person', 'bottle', 'remote', 'cell phone'],
    157: ['bottle', 'person', 'cell phone'],
    158: ['person', 'bottle', 'cell phone'],
    159: ['person', 'bottle', 'cell phone'],
    160: ['cell phone', 'bottle', 'person'],
    161: ['bottle', 'person', 'cell phone'],
    162: ['cell phone', 'bottle', 'person'],
    163: ['bottle', 'person', 'cell phone'],
    164: ['bottle', 'cell phone', 'person'],
    165: ['bottle', 'cell phone', 'person'],
    166: ['bottle', 'person', 'cell phone'],
    167: ['cell phone', 'bottle', 'person', 'chair'],
    168: ['bottle', 'person', 'cell phone'],
    169: ['person', 'bottle', 'cell phone'],
    170: ['bottle', 'person', 'cell phone'],
    171: ['bottle', 'person', 'cell phone', 'remote', 'chair'],
    172: ['person', 'book', 'bottle', 'cell phone'],
    173: ['bottle', 'person', 'cell phone'],
    174: ['bottle', 'person', 'cell phone', 'remote', 'chair'],
    175: ['cell phone', 'bottle', 'person'],
    176: ['bottle', 'cell phone', 'person'],
    177: ['cell phone', 'bottle', 'person'],
    178: ['bottle', 'cell phone', 'person'],
    179: ['person', 'remote', 'bottle', 'laptop'],
    180: ['laptop'],
    181: ['person', 'bottle', 'remote', 'laptop'],
    182: ['laptop', 'person', 'cell phone', 'bottle', 'remote'],
    183: ['cell phone', 'bottle', 'person', 'laptop'],
    184: ['bottle', 'cell phone', 'person', 'book'],
    185: ['cell phone', 'bottle', 'person'],
    186: ['person', 'bottle', 'cell phone', 'laptop', 'couch'],
    187: ['person', 'bottle', 'cell phone'],
    188: ['person', 'bottle', 'cell phone', 'remote'],
    189: ['person'],
    190: ['bottle', 'person'],
    191: ['person', 'cell phone', 'remote'],
    192: ['person', 'cell phone'],
    193: ['cell phone', 'person', 'mouse'],
    194: ['cell phone', 'person', 'laptop'],
    195: ['person', 'tv'],
    196: ['tv', 'laptop'],
    197: ['tv', 'laptop'],
    198: ['tv', 'laptop'],
    199: ['laptop'],
    200: ['laptop'],
    201: ['laptop'],
    202: ['laptop'],
    203: ['laptop'],
    204: ['laptop'],
    205: ['laptop'],
    206: ['laptop'],
    207: ['laptop', 'remote'],
    208: ['laptop', 'tv'],
    209: ['laptop', 'tv'],
    210: ['laptop', 'tv', 'person']}

import numpy as np

def take_second(elem):
    return elem[1]

def obj_detect(epochs):

    epoch_seconds = [[] for x in range(len(epochs))]
    for i,j in enumerate(epochs.values()):
#     print(i,j)
        epoch_seconds[i].extend([round(j[0]/500),round(j[1]/500)])
    
    
    epoch_objs = [[] for x in range(len(epochs))]

    for ind, epoch in enumerate(epoch_seconds):
        obj_dict = dict((k, seconds_dict[k]) for k in seconds_dict if k > epoch[0] and k < epoch[1])
        obj_list_flat = [i for i in obj_dict.values()]
        values, counts = np.unique([item for sublist in obj_list_flat for item in sublist], return_counts=True)

        obj_list_unsorted = list(zip(values,counts))
        
        obj_list_sorted = sorted(obj_list_unsorted, key=take_second, reverse=True)
        
        for i in range(len(obj_list_sorted)):
            if obj_list_sorted[i][1] > 1:
                epoch_objs[ind].append(str(str(obj_list_sorted[i][0]) + ' - present for ' + str(obj_list_sorted[i][1]) + ' seconds'))
            else:
                epoch_objs[ind].append(str(str(obj_list_sorted[i][0]) + ' - present for ' + str(obj_list_sorted[i][1]) + ' second'))
    #     uniq_objs = list(zip(values, counts))
    #     print(uniq_objs)

    return epoch_objs